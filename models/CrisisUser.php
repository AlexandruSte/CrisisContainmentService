<?php
    require_once('Connection.php');

    class CrisisUser {
        private $id;
        private $firstname;
        private $lastname;
        private $email;
        private $password;
        private $country;
        private $city;
        private $zipcode;
        private $phone;

        public function __construct ($firstname, $lastname, $email, $password, $country, $city, $zipcode, $phone)
        {
            $this->firstname = $firstname;
            $this->lastname = $lastname;
            $this->email = $email;
            $this->password = $password;
            $this->country = $country;
            $this->city = $city;
            $this->zipcode = $zipcode;
            $this->phone = $phone;
        }

        // method used to send the object to the database (id is autogenerated)
        public function create(): bool
        {
            $connection = Connection::Instance();
            //check if already exists
            $sql = "SELECT count(*) \"Number\" FROM crisis_user WHERE email = '" . $this->email . "';";
            try {
                $nr=0;
                foreach ($connection->query($sql) as $row)
                    $nr+=$row['Number'];
                if ($nr==0)
                    return false;
            }
            catch (PDOException $e) {
                return false;
            }
            $sql = "INSERT INTO crisis_user (firstname, lastname, email, password, country, city, zipcode, phone) VALUES ('"
                .$this->firstname."', '"
                .$this->lastname."', '"
                .$this->email."', '"
                .$this->password."', '"
                .$this->country."', '"
                .$this->city."', '"
                .$this->zipcode."', '"
                .$this->phone."');";
            if (!($ok = $connection->exec($sql)))
                return false;
            $sql = "SELECT TOP(1) id FROM crisis_user ORDER BY id DESC";
            try
            {
                foreach ($connection->query($sql) as $row)
                    $this->id = $row['id'];
                return true;
            }
            catch (PDOException $e) {
                return false;
            }
        }

        //method used to load the information related to the object with this specific id
        public function load(): bool
        {
            $connection = Connection::Instance();
            $sql = "SELECT * FROM crisis_user WHERE id = ".$this->id.";";
            try
            {
                foreach ($connection->query($sql) as $row)
                {
                    $this->firstname = $row['firstname'];
                    $this->lastname = $row['lastname'];
                    $this->email = $row['email'];
                    $this->password = $row['password'];
                    $this->country = $row['country'];
                    $this->city = $row['city'];
                    $this->zipcode = $row['zipcode'];
                    $this->phone = $row['phone'];
                }
                return true;
            }
            catch (PDOException $e) {
                return false;
            }
        }

        //method used to save the current object with this specific id into the database
        public function save(): bool
        {
            $connection = Connection::Instance();
            $sql = "UPDATE crisis_user SET "
                ."firstname = '" . $this->firstname."', "
                ."lastname = '" . $this->lastname."', "
                ."email = '" . $this->email."', "
                ."password = '" . $this->password ."', "
                ."country = '" . $this->country ."', "
                ."city = '" . $this->city ."', "
                ."zipcode = '" . $this->zipcode . "' "
                ."WHERE id = " . $this->id . ";";
            if (!($ok = $connection->exec($sql)))
                return false;
            return true;
        }

        //method used to remove the object with this specific id
        public function remove(): bool
        {
            $connection = Connection::Instance();
            $sql = "DELETE FROM crisis_user WHERE id = ".$this->id.";";
            if (!($ok = $connection->exec($sql)))
                return false;
            return true;
        }

        public function find($email, $password): bool
        {
            $connection = Connection::Instance();
            $sql = "SELECT * FROM crisis_user WHERE email = '".$email."' AND password = '".$password."';";
            try
            {
                foreach ($connection->query($sql) as $row)
                {
                    $this->id=$row['id'];
                    $this->firstname = $row['firstname'];
                    $this->lastname = $row['lastname'];
                    $this->email = $row['email'];
                    $this->phone = $row['phone'];
                    $this->country = $row['country'];
                    $this->zipcode = $row['zipcode'];
                    $this->city = $row['city'];
                    $this->password = $row['password'];
                    return true;
                }
                return false;
            }
            catch (PDOException $e) {
                return false;
            }
        }

        public function getId(): int
        {
            return $this->id;
        }

        public function setId($id): void
        {
            $this->id = $id;
        }

        public function getFirstname()
        {
            return $this->firstname;
        }

        public function setFirstname($firstname)
        {
            $this->firstname = $firstname;
        }

        public function getLastname()
        {
            return $this->lastname;
        }

        public function setLastname($lastname)
        {
            $this->lastname = $lastname;
        }

        public function getEmail()
        {
            return $this->email;
        }

        public function setEmail($email)
        {
            $this->email = $email;
        }

        public function getPassword()
        {
            return $this->password;
        }

        public function setPassword($password)
        {
            $this->password = $password;
        }

        public function getCountry()
        {
            return $this->country;
        }

        public function setCountry($country)
        {
            $this->country = $country;
        }

        public function getCity()
        {
            return $this->city;
        }

        public function setCity($city)
        {
            $this->city = $city;
        }

        public function getZipcode()
        {
            return $this->zipcode;
        }

        public function setZipcode($zipcode)
        {
            $this->zipcode = $zipcode;
        }

        public function getPhone()
        {
            return $this->phone;
        }

        public function setPhone($phone)
        {
            $this->phone = $phone;
        }
    }
?>